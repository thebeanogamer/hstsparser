---
name: Build Releases
on: push

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache Python modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.0
          virtualenvs-create: false
          installer-parallel: true

      - name: Install Python Dependencies
        run: C:\Users\runneradmin\.local\bin\poetry install --no-interaction --no-ansi --without=dev
        env:
          PIP_CACHE_DIR: ~/.pip

      - name: Build Executable
        run: C:\Users\runneradmin\.local\bin\poetry run pyinstaller --onefile --additional-hooks-dir hooks hstsparser.py

      - name: Print Helptext to Validate Executable
        run: dist\hstsparser.exe -h

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: hstsparser.exe
          path: dist/hstsparser.exe

  rpm:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/fedora:42
      options: "--privileged"
    outputs:
      version: "${{ steps.version.outputs.version }}"

    steps:
      - name: Install dependencies
        run: dnf install git rpmdevtools rpm-build make tar dnf-plugins-core mock -y

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build in Mock
        run: make mock

      - name: Upload mock logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mock-logs
          path: /var/lib/mock/fedora-40-x86_64/result/*

      - name: Get RPM Version and Release
        id: version
        run: echo "version=$(rpmspec -q hstsparser.spec --queryformat='%{version}-%{release}')" >> "$GITHUB_OUTPUT"

      - name: Upload SRPM
        uses: actions/upload-artifact@v4
        with:
          name: hstsparser-${{ steps.version.outputs.version }}.src.rpm
          path: /var/lib/mock/fedora-40-x86_64/result/hstsparser-${{ steps.version.outputs.version }}.src.rpm
          if-no-files-found: error

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: hstsparser-${{ steps.version.outputs.version }}.noarch.rpm
          path: /var/lib/mock/fedora-40-x86_64/result/hstsparser-${{ steps.version.outputs.version }}.noarch.rpm
          if-no-files-found: error

  rpmlint:
    runs-on: ubuntu-latest
    container: docker.io/library/fedora:40
    needs: rpm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download RPM
        uses: actions/download-artifact@v2
        with:
          name: hstsparser-${{ needs.rpm.outputs.version }}.noarch.rpm
          path: .

      - name: Install dependencies
        run: dnf install rpmlint -y

      - name: Lint RPM Spec File
        run: rpmlint -sv ./hstsparser-${{ needs.rpm.outputs.version }}.noarch.rpm ./hstsparser.spec
