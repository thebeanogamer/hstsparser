---
name: Lint Codebase
on: push

jobs:
  python:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache Python modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.0
          virtualenvs-create: false
          installer-parallel: true

      - name: Install Python Dependencies
        run: poetry install --no-interaction --no-ansi
        env:
          PIP_CACHE_DIR: ~/.pip

      - name: Run Linting Checks
        run: python -m flake8 . | tee flake8.xml

      - name: Publish Linting Results
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/flake8.xml'

  rpm:
    runs-on: ubuntu-latest
    container: docker.io/library/fedora:38

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: dnf install rpmlint -y

      - name: Lint RPM Spec File
        run: rpmlint -v hstsparser.spec
